name: ci

on:
  push:
    branches: [main]
    paths-ignore:
    - '**.md'
  pull_request:
    branches: [main]
    paths-ignore:
    - '**.md'
  release:
    branches: [main]
    types: [published]

jobs:
  version:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Get tag if tagged/released
      uses: dawidd6/action-get-tag@v1
      if: startsWith(github.ref, 'refs/tags/v')
      id: tag
      with:
        strip_v: true

    - name: Set TAG env var from tag if tagged/released and update VERSION in version file
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        VERSION_FILE="./src/version.hpp"
        OLD_TAG=$(grep VERSION $VERSION_FILE | cut -d ' ' -f3 | tr -d '"' | tr -d '\n')
        echo "OLD_TAG: $OLD_TAG"
        NEW_TAG=${{ steps.tag.outputs.tag }}
        echo "NEW_TAG: $NEW_TAG"
        if [[ $NEW_TAG == $OLD_TAG ]]; then
          echo "Old and new TAG/VERSION are the same! No update required!"
        else
          echo "Updating VERSION in version file [$OLD_TAG => $NEW_TAG]"
          sed -i -e "s|VERSION .*|VERSION \"$NEW_TAG\"|" $VERSION_FILE
          git config --local user.name 'Azeem Sajid'
          git config --local user.email 'azeem.sajid@gmail.com'
          git diff $VERSION_FILE
          git add $VERSION_FILE
          git commit -m "Automatic version update from $OLD_TAG to $NEW_TAG."
          git push origin main
          echo "Version updated successfully!"
        fi

  ci:
    needs: version

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04, macos-11]

    runs-on: ${{ matrix.os }}

    env:
      AMD64_LINUX: amd64-linux
      ARM64_LINUX: arm64-linux
      AMD64_WINDOWS: amd64-windows
      AMD64_MACOSX: amd64-macosx
      ARTIFACT_RETENTION_DAYS: 5

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set TAG env var from VERSION in version file
      run: |
        VERSION_FILE="./src/version.hpp"
        TAG=$(grep VERSION $VERSION_FILE | cut -d ' ' -f3 | tr -d '"' | tr -d '\n')
        echo "TAG: $TAG"
        echo "TAG=$TAG" >> $GITHUB_ENV

    - name: Set up env vars
      env:
        AMD64_LINUX_PREFIX: spancopy-${{ env.TAG }}-${{ env.AMD64_LINUX }}
        ARM64_LINUX_PREFIX: spancopy-${{ env.TAG }}-${{ env.ARM64_LINUX }}
        AMD64_WINDOWS_PREFIX: spancopy-${{ env.TAG }}-${{ env.AMD64_WINDOWS }}
        AMD64_MACOSX_PREFIX: spancopy-${{ env.TAG }}-${{ env.AMD64_MACOSX }}
      run: |
        PREFIXES=(AMD64_LINUX_PREFIX ARM64_LINUX_PREFIX AMD64_WINDOWS_PREFIX AMD64_MACOSX_PREFIX)
        for PREFIX in ${PREFIXES[*]}; do
          PREFIX_KEY="$PREFIX"
          PREFIX_VAL="${!PREFIX}"
          PREFIX_TAR_KEY="${PREFIX_KEY}_TAR"
          PREFIX_TAR_VAL="${PREFIX_VAL}.tar.gz"

          echo "$PREFIX_KEY: $PREFIX_VAL"
          echo "$PREFIX_TAR_KEY: $PREFIX_TAR_VAL"

          echo "$PREFIX_KEY=$PREFIX_VAL" >> $GITHUB_ENV
          echo "$PREFIX_TAR_KEY=$PREFIX_TAR_VAL" >> $GITHUB_ENV
        done

    # --- Build ---

    - name: Install Dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt install -y tree g++-mingw-w64 g++-aarch64-linux-gnu

    - name: Build (${{ env.AMD64_LINUX_PREFIX }})
      if: runner.os == 'Linux'
      env:
        CXX: g++
        STRIP: strip
        BUILD_DIR: ${{ env.AMD64_LINUX_PREFIX }}
        TAR: ${{ env.AMD64_LINUX_PREFIX_TAR }}
      run: ./scripts/ci-build.sh

    - name: Build (${{ env.ARM64_LINUX_PREFIX }})
      if: runner.os == 'Linux'
      env:
        CXX: aarch64-linux-gnu-g++
        STRIP: aarch64-linux-gnu-strip
        BUILD_DIR: ${{ env.ARM64_LINUX_PREFIX }}
        TAR: ${{ env.ARM64_LINUX_PREFIX_TAR }}
      run: ./scripts/ci-build.sh

    - name: Build (${{ env.AMD64_WINDOWS_PREFIX }})
      if: runner.os == 'Linux'
      env:
        CXX: x86_64-w64-mingw32-g++
        STRIP: x86_64-w64-mingw32-strip
        BUILD_DIR: ${{ env.AMD64_WINDOWS_PREFIX }}
        TAR: ${{ env.AMD64_WINDOWS_PREFIX_TAR }}
      run: ./scripts/ci-build.sh

    - name: Build (${{ env.AMD64_MACOSX_PREFIX }})
      if: runner.os == 'macOS'
      env:
        CXX: clang++
        STRIP: strip
        BUILD_DIR: ${{ env.AMD64_MACOSX_PREFIX }}
        TAR: ${{ env.AMD64_MACOSX_PREFIX_TAR }}
      run: ./scripts/ci-build.sh

    # --- Upload ---

    - name: Upload (${{ env.AMD64_LINUX_PREFIX_TAR }})
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.AMD64_LINUX_PREFIX_TAR }}
        path: ${{ env.AMD64_LINUX_PREFIX }}/${{ env.AMD64_LINUX_PREFIX_TAR }}
        retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
        if-no-files-found: error

    - name: Upload (${{ env.ARM64_LINUX_PREFIX_TAR }})
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARM64_LINUX_PREFIX_TAR }}
        path: ${{ env.ARM64_LINUX_PREFIX }}/${{ env.ARM64_LINUX_PREFIX_TAR }}
        retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
        if-no-files-found: error

    - name: Upload (${{ env.AMD64_WINDOWS_PREFIX_TAR }})
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.AMD64_WINDOWS_PREFIX_TAR }}
        path: ${{ env.AMD64_WINDOWS_PREFIX }}/${{ env.AMD64_WINDOWS_PREFIX_TAR }}
        retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
        if-no-files-found: error

    - name: Upload (${{ env.AMD64_MACOSX_PREFIX_TAR }})
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.AMD64_MACOSX_PREFIX_TAR }}
        path: ${{ env.AMD64_MACOSX_PREFIX }}/${{ env.AMD64_MACOSX_PREFIX_TAR }}
        retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
        if-no-files-found: error

    # --- Upload on tag/release ---

    - name: Upload release artifacts
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/v')
      with:
        files: |
          ${{ env.AMD64_LINUX_PREFIX }}/${{ env.AMD64_LINUX_PREFIX_TAR }}
          ${{ env.ARM64_LINUX_PREFIX }}/${{ env.ARM64_LINUX_PREFIX_TAR }}
          ${{ env.AMD64_WINDOWS_PREFIX }}/${{ env.AMD64_WINDOWS_PREFIX_TAR }}
          ${{ env.AMD64_MACOSX_PREFIX }}/${{ env.AMD64_MACOSX_PREFIX_TAR }}
